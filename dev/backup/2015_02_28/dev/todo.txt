- get grouping test working correctly again
	+ group test is iterating through multiple tests - should do basic, quick analysis to make sure things work as expected

- to group votes and posts, ensure rank and created (int) are set

- set cron job to it iterate through active posts and rank them



- get rid of "Norm"

- sort through controllers and lib, get rid of unused

- document tests



- update user managment


- group_votes and posts should have ranking

- order groups

- add weithed score to posts

- develop ranking system

- develop comment system

- develop spam check

- split/merge groups




- create dynamic test, see which settings in regroup function lead to fastest regrouping with smallest bias 

- write group grouping function/test?
	+ this could be a cron the periodically checkes/rates each group against every other group

- setup user que system, ignnore old posts

- setup post/decay system

- pereodically try to regroup users with high level of agreement



- start iterative testing of group/grouping functions
    + see which settings lead to the quickest grouping based on params

- test bias below .4 seems to not be grouping? - works slowly at .3

- group.assignUser resulting in duplicate entry

- move unasign/asign user into reasign transaction

- make automic unasign into transaction

- confirm limits when getting users, groups, etc. in seeding


- make postGroupVote primary key postid + group id

- consider removing/modifying datetime/timestamp fields

- remove id field from UserVote table

- investigate memory/table size

- make table and column name (i.e. user vs userId) consistent

- maybe migrate mysql driver to https://github.com/felixge/node-mysql - start developing lightweight ORM

- confirm all model accessors/setters are being used: http://sequelizejs.com/docs/latest/models

- clean up models in vote_controller: http://screencast.com/t/am7str9sPjb

- post vote totals should just be part of post

- all functions with find or create should have a "retry" function

- create unique requirements on compound indexes

- confirm seeding is working correctly

- optimize removeUserFromGroup function



- add indexes: REVIEW EVERYTHING!!!
	+ confirm which should be compound
    + percentages (agreements)   
    + totals
    + user.username
    + UserVote.user  UserVote.post
    + userGroupAgreements user id group id
        - maybe total (small totals get excluded when regrouping)
    + total votes in userGroupAgreements
    + percentage up may note need index (if replacing with score)? see what ranker function needs

- find way to pass argument to require





- setup test and seed scripts

- NEED TO TEST update user group agreement

- start implementing testing

- start implementing sort script

- review and minimize sql fields - do all need created/updated?

- confirm select are only returning desired fields

- UserGroupAgreements, UserVotes don't need an id field

- ensure unique indexes are set and retrys exist for each function





- find out if it's possible to increment and DB column field and have percentage column get updated in the same query (to avoid potential overwrite situations(i.e. one user reads, second user reads, first user writes, second user overwrite first user))

- add config with DB creds

- parse urls and add http if ommited



- on delete cascade for foreign keys

- implement automated group testing

- ensure all sequelize operations use getters and setters: http://sequelizejs.com/docs/1.7.8/models


Deploy:
	- remove auto update from schema.js
	- uncomment the init flag at the top of the models.js file (this is BAD)
	- create cluster if on multi-core
	- set error handeling in app.js
	- update db creds
	- setup Redis or Mongo for session storage
	- remove novalidate from forms



UserVote not accurate up/down